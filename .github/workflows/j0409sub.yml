name: module Update cache

on:
  workflow_dispatch:
  workflow_call:

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for
  # pull requests or the commit hash for any other events.
  group: ${{ github.workflow }}-updatecache-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

# permissions:
  # contents: read # to fetch code (actions/checkout)

env:
  call-sync-ver: 1

jobs:
  verify-cache-and-save:
    # needs: [restore-cache]
    runs-on: ubuntu-22.04
    steps:
      - name: echo ver
        run: |
          echo 'this jobs called from main'
          #= # cache 3 dummy files
          #= test -d cachedir || mkdir cachedir
          #= echo 1234 >> cachedir/line1
          #= echo 'https://example.com/pool/a/as/asdf/asdfqwert.zip' >> cachedir/line2
          #= echo 6789 >> cachedir/line3
      - name: at-called, keyfile, cachedir
        run: |
          # hashFiles('keyfile') for cachekey
          touch keyfile
          echo 1234 >> keyfile
          echo https://example.com/pool/a/as/asdf/asdfqwert.zip >> keyfile
          echo 6789 >> keyfile
          sed -i 's/$/\r/g' keyfile
          cat keyfile
          file keyfile
          #= # cache 3 dummy files
          #= test -d cachedir || mkdir cachedir
          #= echo 1234 >> cachedir/line1
          #= echo 'https://example.com/pool/a/as/asdf/asdfqwert.zip' >> cachedir/line2
          #= echo 6789 >> cachedir/line3
          test -d repocache || mkdir repocache
      - name: at-called, restore cache
        uses: actions/cache/restore@v4
        with:
          key: Kash-${{ hashFiles('keyfile') }}
          path: repocache
      - name: at-called check repocache
        run: |
          echo '--- files in repocache ---'
          ls -1 repocache


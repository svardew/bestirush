name: ruby33-and-vim

on:
  push:
    branches: ['acme']
  workflow_dispatch:

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  testruby:
    runs-on: ubuntu-22.04

    steps:
      - name: begin
        run: echo '--- start [testruby] job. hello,,, ' $PWD


      - name: Checkout repository from github
        uses: actions/checkout@v4
        with:
          repository: svardew/vim
          # ref: v9.0.2138
          ref: fda700cb04612fe2f9301a9ba820309175decabf
          path: .

      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ruby-3.3.0-rc1

      - name: check setup-ruby stat, ldconfig
        run: |
          echo '// ruby --version && which ruby'
          ruby -v
          which ruby
          echo '// digest/sha256 for "ruby" string'
          echo '// expect [b9138194ffe9e7c8bb6d79d1ed56259553d18d9cb60b66e3ba5aa2e5b078055a]'
          ruby -rdigest/sha2 -e 'puts Digest::SHA256.hexdigest(%q[ruby])'
          echo '// locate libruby.so.3.3'
          find /opt -name 'libruby.so*'
          echo '// display Rbconfig::CONFIG'
          ruby -e 'pp RbConfig::CONFIG["libdir"]'
          echo '// grep ldconfig'
          ldconfig -p | grep libruby
          echo '// add user-ld-so-conf file'
          ruby -rrbconfig -e 'puts RbConfig::CONFIG["libdir"]' | sudo tee /etc/ld.so.conf.d/gha-setup-ruby
          ldconfig -p | grep libruby
          

      - name: configure, build, version check vim
        if: false
        run: |
          ./configure --enable-gui=no --with-features=normal --enable-rubyinterp=dynamic
          make
          ./src/vim --version

      - name: env LD_LIBRARY_PATH [disable]
        if: false
        run: |
          x_ld_library_path=$(ruby -e 'require "rbconfig"; print RbConfig::CONFIG["libdir"]')
          echo "LD_LIBRARY_PATH=$x_ld_library_path" >> $GITHUB_ENV

      - name: test vim
        if: false
        run: |
          echo '// setenv LD_L_P=env.L_L_P'
          export LD_LIBRARY_PATH=${{ env.LD_LIBRARY_PATH }}
          cd src/testdir
          make test_let.res
          echo '// cat messages.'
          cat messages
          echo '// cat test_result.log'
          if [ -f test_result.log ]; then cat test_result.log ; fi
          if [ -f test.log ]; then cat test.log ; fi
          echo '// expect 1 testfile, all Test suite pass.'
          echo '// [ld-library-path]' $LD_LIBRARY_PATH ' [check-me]'

      - name: test ruby on vim
        if: false
        run: |
          echo '// 0. export LD_LIBRARY_PATH for ruby, via $GITHUB_ENV'
          echo "LD_LIBRARY_PATH=$(ruby -rrbconfig -e 'print RbConfig::CONFIG[%q<libdir>]')" >> $GITHUB_ENV
          echo '// 1. test fail for NoMethodError format'
          make testclean
          cd src/testdir
          # make test_ruby.res TEST_FILTER=Test_ruby_Vim_buffer_get
          make test_ruby.res
          echo '// cat messages.'
          cat messages
          echo '// cat test_result.log'
          if [ -f test_result.log ]; then cat test_result.log ; fi
          if [ -f test.log ]; then cat test.log ; fi
          echo '// 2. test fail for rb_ary_detransient for +ruby/dyn'
          # touch t_y33.vim
          # echo 'func Test_rb_ary_detransient()' >> t_y33.vim
          # echo 'endfunc' >> t_y33.vim

      - name: close
        if: false
        run: |
          echo '// setenv LD_L_P=env.L_L_P'
          export LD_LIBRARY_PATH=${{ env.LD_LIBRARY_PATH }}
          echo '// [ld-library-path]' $LD_LIBRARY_PATH ' [check-me]'
          echo $LD_LIBRARY_PATH
          echo '--- close [testruby] job. bye,,,' $PWD

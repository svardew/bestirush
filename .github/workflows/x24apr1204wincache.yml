name: Cache win deps /1

on:
  push:
    branches: ['void']
  workflow_dispatch:
  workflow_call:

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for
  # pull requests or the commit hash for any other events.
  #TODO?reusing-workflows? group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  group: ${{ github.workflow }}-check-windows-cache
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  windows-cache:
    runs-on: ubuntu-22.04
    permissions:
      actions: write # Write cache. docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
      contents: write # to fetch code (actions/checkout)
    env:
      # Lua
      LUA_VER: 54
      LUA_VER_DOT: '5.4'
      LUA_RELEASE: 5.4.2
      # winpty
      WINPTY_FILE: winpty-0.4.3-msvc2015.zip
      WINPTY_VER: 0.4.3
      # libsodium
      SODIUM_VER: '1.0.19'
      SODIUM_MSVC_VER: v143
      SODIUM_MINGW_VER: 26
      # repository
      GH_TOKEN: ${{ github.token }}
      REPO: ${{ github.repository }}

    steps:
      - id: fn
        name: set filename
        run: |
          echo '/* original filenames */'
          f=winpty-${{ env.WINPTY_VER }}-msvc2015.zip
          echo "WINPTY=$f" >> $GITHUB_OUTPUT
          f=lua-${{ env.LUA_RELEASE }}_Win32_dllw6_lib.zip
          echo "LUA32=$f" >> $GITHUB_OUTPUT
          f=lua-${{ env.LUA_RELEASE }}_Win64_dllw6_lib.zip
          echo "LUA64=$f" >> $GITHUB_OUTPUT
          f=libsodium-${{ env.SODIUM_VER }}-stable-msvc.zip
          echo "SODIUM_MSVC=$f" >> $GITHUB_OUTPUT
          f=libsodium-${{ env.SODIUM_VER }}-stable-mingw.tar.gz
          echo "SODIUM_MINGW=$f" >> $GITHUB_OUTPUT
      - id: url
        name: set download url
        run: |
          echo '/* urls */'
          url=https://github.com/rprichard/winpty/releases/download
          url=$url/${{ env.WINPTY_VER }}/${{ steps.fn.outputs.WINPTY }}
          echo "WINPTY=$url" >> $GITHUB_OUTPUT
          url=https://downloads.sourceforge.net/luabinaries
          url=$url/${{ steps.fn.outputs.LUA32 }}
          echo "LUA32=$url" >> $GITHUB_OUTPUT
          url=https://downloads.sourceforge.net/luabinaries
          url=$url/${{ steps.fn.outputs.LUA64 }}
          echo "LUA64=$url" >> $GITHUB_OUTPUT
          url=https://download.libsodium.org/libsodium/releases
          url=$url/${{ steps.fn.outputs.SODIUM_MSVC }}
          echo "SODIUM_MSVC=$url" >> $GITHUB_OUTPUT
          url=https://download.libsodium.org/libsodium/releases
          url=$url/${{ steps.fn.outputs.SODIUM_MINGW }}
          echo "SODIUM_MINGW=$url" >> $GITHUB_OUTPUT

      - name: show outputs
        shell: bash {0}
        run: |
          echo '/* filenames */'
          echo ${{ join(steps.fn.outputs.*, '  ') }}
          echo '/* urls */'
          echo ${{ join(steps.url.outputs.*, '  ') }}

      - name: cachedir, urls.txt, gh-action-cache
        run: |
          touch urls.txt
          echo ${{ env.LUA_RELEASE }} >> urls.txt
          echo ${{ steps.url.outputs.WINPTY }} >> urls.txt
          echo ${{ env.SODIUM_VER }} >> urls.txt
          # LF to CRLF
          sed -i 's/$/\r/g' urls.txt
          file urls.txt
          mkdir cache-x64
          mkdir cache-x86
          # gh-actions-cache for delete Repository Cache via API
          # set env.GH_TOKEN
          gh extension install actions/gh-actions-cache

      - name: restore cache (x86)
        uses: actions/cache/restore@v4
        with:
          key: Windows-x86-${{ hashFiles('urls.txt') }}
          path: cache-x86

      - name: restore cache (x64)
        uses: actions/cache/restore@v4
        with:
          key: Windows-x64-${{ hashFiles('urls.txt') }}
          path: cache-x64

      - name: try download (x86)
        shell: bash {0}
        run: |
          cd cache-x86
          md5sum * | sort > ../MD5SUMS_x86_a
          function dltwice {
            # dltwice <fname> <url>
            if [ ! -f $1 ]; then wget --no-verbose --tries=2 -O $1 $2 ;fi
            if [ ! -s $1 ]; then rm $1 ;fi
          }
          dltwice lua.zip ${{ steps.url.outputs.LUA32 }}
          dltwice ${{ env.WINPTY_FILE }} ${{ steps.url.outputs.WINPTY }}
          dltwice libsodium.zip ${{ steps.url.outputs.SODIUM_MSVC }}
          dltwice libsodium.tar.gz ${{ steps.url.outputs.SODIUM_MINGW }}
          md5sum * | sort > ../MD5SUMS_x86_b
          ls -1
          cd ../

      - name: try download (x64)
        shell: bash {0}
        run: |
          cd cache-x64
          md5sum * | sort > ../MD5SUMS_x64_a
          function dltwice {
            # dltwice <fname> <url>
            if [ ! -f $1 ]; then wget --no-verbose --tries=2 -O $1 $2 ;fi
            if [ ! -s $1 ]; then rm $1 ;fi
          }
          dltwice lua.zip ${{ steps.url.outputs.LUA64 }}
          dltwice ${{ env.WINPTY_FILE }} ${{ steps.url.outputs.WINPTY }}
          dltwice libsodium.zip ${{ steps.url.outputs.SODIUM_MSVC }}
          dltwice libsodium.tar.gz ${{ steps.url.outputs.SODIUM_MINGW }}
          md5sum * | sort > ../MD5SUMS_x64_b
          ls -1
          cd ../

      - name: keep cache (x86)
        if: ${{ hashFiles('MD5SUMS_x86_a') == hashFiles('MD5SUMS_x86_b') }}
        run: |
          echo 'Repository cache for Windwos-x86 is up to date.'
          echo 'files in cache:'
          ls -lagGh cache-x86/

      - name: update cache. first delete (x86)
        if: ${{ hashFiles('MD5SUMS_x86_a') != hashFiles('MD5SUMS_x86_b') }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        shell: bash {0}
        run: |
          xcache=Windows-x86-${{ hashFiles('urls.txt') }}
          xcacheid=$(gh actions-cache list -R ${{ env.REPO }} |
            grep -F $xcache |
            cut -f1
          )
          if [ -n "$xcacheid" ]; then
            gh actions-cache delete $xcache -R ${{ env.REPO }} --confirm
          fi

      - name: update cache. save (x86)
        if: ${{ hashFiles('MD5SUMS_x86_a') != hashFiles('MD5SUMS_x86_b') }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        uses: actions/cache/save@v4
        with:
          path: cache-x86
          key: Windows-x86-${{ hashFiles('urls.txt') }}

      - name: keep cache (x64)
        if: ${{ hashFiles('MD5SUMS_x64_a') == hashFiles('MD5SUMS_x64_b') }}
        run: |
          echo 'Repository cache for Windwos-x64 is up to date.'
          echo 'files in cache:'
          ls -lagGh cache-x64/

      - name: update cache. first delete (x64)
        if: ${{ hashFiles('MD5SUMS_x64_a') != hashFiles('MD5SUMS_x64_b') }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        shell: bash {0}
        run: |
          xcache=Windows-x64-${{ hashFiles('urls.txt') }}
          xcacheid=$(gh actions-cache list -R ${{ env.REPO }} |
            grep -F $xcache |
            cut -f1
          )
          if [ -n "$xcacheid" ]; then
            gh actions-cache delete $xcache -R ${{ env.REPO }} --confirm
          fi

      - name: update cache. save (x64)
        if: ${{ hashFiles('MD5SUMS_x64_a') != hashFiles('MD5SUMS_x64_b') }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        uses: actions/cache/save@v4
        with:
          path: cache-x64
          key: Windows-x64-${{ hashFiles('urls.txt') }}

      - name: report cache
        shell: bash {0}
        run: |
          echo '--- current windows cache in repository ---'
          gh actions-cache list -R ${{ env.REPO }} | grep -F Windows-x
          echo '--- files in x64 windows cache (md5) ---'
          cat MD5SUMS_x64_b
          echo '--- files in x86 windows cache (md5) ---'
          cat MD5SUMS_x86_b

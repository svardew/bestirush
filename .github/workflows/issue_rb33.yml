name: ruby 3.3 transient_heap and NoMethoError format

on:
  push:
    branches: ['acme']
  workflow_dispatch:

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  testruby:
    runs-on: ubuntu-22.04

    steps:
      - name: begin
        run: |
          echo '--- start [testruby] job. hello >>>' $PWD
          echo '/// in acion.yml, bash-heredoc not use.'
          echo '/// multi time echo is need'
          ls . -1

      - name: staa
        id: staa
        if: false
        env:
          user: svardewaa
          age: nice
        run: |
          echo "go_age=${{ env.age }}" >> $GITHUB_OUTPUT
          /bin/true

      - name: stbb
        id: stbb
        if: false
        env:
          user: svardewbb
          age: 99
        run: |
          echo ${{ env.age }} age..
          echo ${{ steps.staa.outputs.go_age }} age..., via steps.staa.age from GITHUB_OUTPUT setted at staa-step.

      - name: Checkout repository from github
        if: true
        uses: actions/checkout@v4
        with:
          repository: svardew/vim
          # ref: v9.0.2138
          ref: fda700cb04612fe2f9301a9ba820309175decabf
          path: ./vim

      - name: setup ruby
        if: true
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ruby-3.3.0-rc1

      - name: rb33env
        id: rb33env
        if: true
        run: |
          echo 'list current dir after actions/checkout'
          ls -1 -p
          echo '// which ruby and ruby version'
          which ruby
          ruby -v
          echo '// locate libruby.so.3.3'
          find /opt -name 'libruby.so*'
          echo '// locate pkgconfig *.pc file'
          ruby -rrbconfig -e 'puts Dir.glob(RbConfig::CONFIG["libdir"]+"/**/ruby*.pc")'
          # echo '// set ld_library_path and pkg_config_path to GITHUB_ENV'
          # str = $(ruby -rrbconfig -e 'puts Dir.glob(RbConfig::CONFIG["libdir"]+"/**/ruby*.pc")[0]')
          # echo "rb33_pkgconfigpath=${str}" >> "$GITHUB_ENV"
          # str = $(ruby -rrbconfig -e 'puts RbConfig::CONFIG["libdir"]')
          # echo "rb33_ldlibrarypath=${str}" >> "$GITHUB_ENV"
          echo '// set ld_library_path and pkg_config_path to GITHUB_OUTPUTS'
          echo "rb33_ldlibrarypath=$(ruby -rrbconfig -e 'puts RbConfig::CONFIG[%q<libdir>]')" >> $GITHUB_OUTPUT
          echo "rb33_pkgconfigpath=$(ruby -rrbconfig -e 'puts RbConfig::CONFIG[%q<libdir>]+%q</pkgconfig>')" >> $GITHUB_OUTPUT

      - name: check ghoutputs
        if: false
        run: |
          echo ${{ steps.rb33env.outputs.rb33_pkgconfigpath }}, PKG_CONFIG_PATH
          echo ${{ steps.rb33env.outputs.rb33_ldlibrarypath }}, LD_LIBRARY_PATH

      - name: add issue tests. Test_cmd_ruby_works, Test_ruby_nomethoderror_format
        run: |
          touch test_yy1
          echo "func Test_cmd_ruby_works()" >  test_yy1
          echo "  ruby 1+2+3"              >> test_yy1
          echo "endfunc"                   >> test_yy1
          mv test_yy1 test_yy1cmdrubywork.vim
          touch test_yy2 nomethoderror.vim
          echo "func Test_ruby_nomethoderror_format()" >  test_yy2
          echo "  call assert_fails('ruby print nil.hjkl'," >> test_yy2
          # echo "  \           \"NoMethodError: undefined method `hjkl' for nil:NilClass\")" >> test_yy2
          # ! %60/backtick, %5C/backslash, %22/doublequote
          # ! sed -i 
          echo "  %5C           %22NoMethodError: undefined method %60hjkl' for nil:NilClass%22)" >> test_yy2
          echo "endfunc" >> test_yy2
          sed -i 's:%5C:\\:g; s:%22:":g; s:%60:`:g' test_yy2
          mv test_yy2 test_yy2nomethoderror.vim
          cat test_yy1cmdrubywork.vim
          cat test_yy2nomethoderror.vim

      - name: current vim with ruby-3.3.0-rc1
        if: false
        run: echo 'check current vim with ruby-3.3.0 issue'

      - name: build vim with static link rb33rc1, test issue tests
        if: true
        run: |
          cp -R ./vim vim-rb33yes
          cp test_yy*.vim ./vim-rb33yes/src/testdir/
          cd ./vim-rb33yes/
          export PKG_CONFIG_PATH=${{ steps.rb33env.outputs.rb33_pkgconfigpath }}
          export LD_LIBRARY_PATH=${{ steps.rb33env.outputs.rb33_ldlibrarypath }}
          ./configure --disable-gui --disable-libsodium --enable-rubyinterp=yes
          make
          cd src/testdir
          make test_yy1cmdrubywork.res
          make test_yy2nomethoderror.res
          echo '// expect: vim +ruby33/yes fail NoMethoderror, success :ruby'
          cat messages

      - name: build vim with dynamic link rb33rc1, test issue tests
        if: false
        run: |
          cp -R ./vim vim-rb33dyn
          cp test_yy*.vim ./vim-rb33dyn/src/testdir/
          cd ./vim-rb33dyn/
          export PKG_CONFIG_PATH=${{ steps.rb33env.outputs.rb33_pkgconfigpath }}
          export LD_LIBRARY_PATH=${{ steps.rb33env.outputs.rb33_ldlibrarypath }}
          ./configure --disable-gui --disable-libsodium --enable-rubyinterp=yes
          make
          cd src/testdir
          make test_yy1cmdrubywork.res
          make test_yy2nomethoderror.res
          echo '// expect: vim +ruby33/dyn fail both NoMethoderror and :ruby'
          cat messages

      - name: close
        if: true
        run: |
          ls -plha .
          find . -type f -name '*.res'
          # echo "$rb33_pkgconfigpath"
          # echo "$rb33_ldlibrarypath"
          echo '--- close [testruby] job. <<<' $PWD

# vim: tw=2 :

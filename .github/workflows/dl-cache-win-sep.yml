name: windows cache management

on:
  # push:
    # branches: ['**']
  workflow_dispatch:

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for
  # pull requests or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  cache-windows:
    runs-on: ubuntu-22.04
    env:
      # Lua
      LUA_RELEASE: '5.4.2'
      LUA32_URL: https://downloads.sourceforge.net/luabinaries/lua-%LUA_RELEASE%_Win32_dllw6_lib.zip
      LUA64_URL: https://downloads.sourceforge.net/luabinaries/lua-%LUA_RELEASE%_Win64_dllw6_lib.zip
      # winpty
      WINPTY_URL: https://github.com/rprichard/winpty/releases/download/0.4.3/winpty-0.4.3-msvc2015.zip
      # libsodium
      SODIUM_VER: '1.0.19'
      SODIUM_MSVC_URL: https://download.libsodium.org/libsodium/releases/libsodium-%SODIUM_VER%-stable-msvc.zip
      SODIUM_MINGW_URL: https://download.libsodium.org/libsodium/releases/libsodium-%SODIUM_VER%-stable-mingw.tar.gz

    steps:
      - name: noop
        run: /bin/true

      - name: directory, url, checksum
        id: url
        run: |
          test -d wgetdir || mkdir wgetdir
          test -d downloads || mkdir downloads
          # url
          luaver=${{ env.LUA_RELEASE }}
          url=${{ env.LUA32_URL }}
          url=${url/\%LUA_RELEASE\%/$luaver}
          echo "LUA32_URL=$url" >> $GITHUB_OUTPUT
          url=${{ env.LUA64_URL }}
          url=${url/\%LUA_RELEASE\%/$luaver}
          echo "LUA64_URL=$url" >> $GITHUB_OUTPUT
          url=${{ env.WINPTY_URL }}
          echo "WINPTY_URL=$url" >> $GITHUB_OUTPUT
          sodiumver=${{ env.SODIUM_VER }}
          url=${{ env.SODIUM_MSVC_URL }}
          url=${url/\%SODIUM_VER\%/$sodiumver}
          echo "SODIUM_MSVC_URL=$url" >> $GITHUB_OUTPUT
          url=${{ env.SODIUM_MINGW_URL }}
          url=${url/\%SODIUM_VER\%/$sodiumver}
          echo "SODIUM_MINGW_URL=$url" >> $GITHUB_OUTPUT

      - name: Restore cached files
        uses: actions/cache/restore@v4
        with:
          path: downloads
          # actions/cache/save cache into Windows-deps-${{ github.run_id }}
          # restore latest cache
          key: not-exists-dummycache-Windows-dependencies
          restore-keys: |
            Windows-deps

      - name: Verify and Download files
        id: download
        shell: bash {0}
        run: |
          cd wgetdir
          cnt=''
          dltwice () {
            # $cnt report dwonloaded files
            url="$1"
            fn="$(echo $url | sed 's:.*/::')"
            test -f "../downloads/$fn" || wget -nv --waitretry=20 --tries=2 -O "./$fn" $url
            test -f "$fn" && cnt="${cnt}$fn"
          }
          dltwice ${{ steps.url.outputs.LUA32_URL }}
          dltwice ${{ steps.url.outputs.LUA64_URL }}
          dltwice ${{ steps.url.outputs.WINPTY_URL }}
          dltwice ${{ steps.url.outputs.SODIUM_MSVC_URL }}
          dltwice ${{ steps.url.outputs.SODIUM_MINGW_URL }}
          cd ../
          if [ -z "$cnt" ]; then
            echo "KEEPCACHE=yes" >> $GITHUB_OUTPUT
          else
            cp -vn wgetdir/*.* ./downloads/
            sha256sum *.* | sort > SHA256SUMS
            sed -i 's:$:\r:g' SHA256SUMS
            echo "KEEPCACHE=no" >> $GITHUB_OUTPUT
          fi
          echo '-- files in downloads --'
          sha256sum downloads/*
          echo '-- files in wgetdir --'
          ls -1 wgetdir

      - name: Save cache
        if: ${{ steps.download.outputs.KEEPCACHE == 'no' }}
        uses: actions/cache/save@v4
        with:
          path: downloads
          key: Windows-deps-${{ github.run_id }}



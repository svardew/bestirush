name: chrony

on:
  schedule:
    - cron: '4/12 * * * *'  # Run once per day, to avoid Coverity's submission limits
  workflow_dispatch:

permissions:
  contents: read # to fetch code (actions/checkout)
  actions: write # delete cache (actions/gh-actions-cache)

jobs:
  x86-dependencies:
    runs-on: ubuntu-22.04

    env:
      ARCH: x86
      CACHEDIR: downloads
      # MD5SUMS: |
      #   8867b0380daabd12ece3dbad73197e78  libsodium-1.0.19-stable-mingw.tar.gz
      #   113f036c91f06a9fdb11186e3dce7d93  libsodium-1.0.19-stable-msvc.zip
      #   25b07e2b5177a2f071f109f641f9e3e4  lua-5.4.2_Win32_dllw6_lib.zip
      #   132834e89206d893630410fa2192bd2a  lua-5.4.2_Win64_dllw6_lib.zip
      #   a0f941c53b8e509712eeca46104674c4  winpty-0.4.3-msvc2015.zip
      # Lua32
      LUA_RELEASE: 5.4.2
      LUA32_URL: https://downloads.sourceforge.net/luabinaries/lua-5.4.2_Win32_dllw6_lib.zip
      LUA32_FILE: lua-5.4.2_Win32_dllw6_lib.zip
      LUA64_URL: https://downloads.sourceforge.net/luabinaries/lua-5.4.2_Win64_dllw6_lib.zip
      LUA64_FILE: lua-5.4.2_Win64_dllw6_lib.zip
      # winpty
      WINPTY_URL: https://github.com/rprichard/winpty/releases/download/0.4.3/winpty-0.4.3-msvc2015.zip
      WINPTY_FILE: winpty-0.4.3-msvc2015.zip
      # libsodium
      SODIUM_VER: 1.0.19
      SODIUM_MSVC_URL: https://download.libsodium.org/libsodium/releases/libsodium-1.0.19-stable-msvc.zip
      SODIUM_MSVC_FILE: libsodium-1.0.19-stable-msvc.zip
      SODIUM_MINGW_URL: https://download.libsodium.org/libsodium/releases/libsodium-1.0.19-stable-mingw.tar.gz
      SODIUM_MINGW_FILE: libsodium-1.0.19-stable-mingw.tar.gz

    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}

      - name: setup downloads, urls.txt
        run: |
          test -d ${{ env.CACHEDIR }} || mkdir ${{ env.CACHEDIR }}
          # touch MD5SUMS
          # echo ${{ env.MD5SUMS }} > MD5SUMS
          touch urls.txt
          echo ${{ env.LUA_RELEASE }} >> urls.txt
          echo ${{ env.WINPTY_URL }} >> urls.txt
          echo ${{ env.SODIUM_VER }} >> urls.txt
          sed -i 's/$/\r/g' urls.txt
          echo '-- urls.txt --'
          cat urls.txt

      - name: restore cache ${{ env.ARCH }}
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CACHEDIR }}
          key: Windows-${{ env.ARCH }}-${{ hashFiles('urls.txt') }}
          restore-keys: |
            Windows-${{ env.ARCH }}-

      - name: check cache, download missing file
        id: checkcache
        shell: bash {0}
        run: |
          mv ${{ env.CACHEDIR }} cache_${{ env.ARCH }}
          cd cache_${{ env.ARCH }}
          flag=""
          dltwice () {
            if [ ! -f "$1" ]; then
              flag="$flag"'x'
              wget -nv --waitretry=20 --tries=2 -O $1 $2
            else
              flag="$flag"'o'
            fi
          }
          dltwice lua.zip    ${{ env.LUA32_URL }}
          dltwice winpty.zip ${{ env.WINPTY_URL }}
          dltwice libsodium.zip    ${{ env.SODIUM_MSVC_URL }}
          dltwice libsodium.tar.gz ${{ env.SODIUM_MINGW_URL }}
          echo '-- files ./cache_x86 --'
          ls ./
          flag=${flag//o/}
          echo "FLAG=$flag" >> $GITHUB_OUTPUT

      - name: delete repository cache
        id: deletecache
        if: ${{ contains(steps.checkcache.outputs.FLAG, 'x') }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          test -d ${{ env.CACHEDIR }} && rm -rf ${{ env.CACHEDIR }}
          mv cache_${{ env.ARCH }} ${{ env.CACHEDIR }}
          gh extension install actions/gh-actions-cache
          key=Windows-${{ env.ARCH }}-${{ hashFiles('urls.txt') }}
          id=$(
            gh actions-cache list -R ${{ github.repository }} |
            grep -E '^[0-9]\+\s\+'$key
            cut -f1
          )
          if [ -n "$id" ]; then
            echo "/* delete repository cache [id:$id] */"
            # gh actions-cache delete $key -R ${{ github.repository }} --confirm
            gh actions-cache delete $key --confirm
          fi
          echo "FLAG=savecache" >> $GITHUB_OUTPUT
          echo '-- caches in this repo --'
          gh actions-cache list

      - name: save cache
        if: ${{ contains(steps.deletecache.outputs.FLAG, 'savecache') }}
        uses: actions/cache/save@v4
        with:
          path: ${{ env.CACHEDIR }}
          key: Windows-${{ env.ARCH }}-${{ hashFiles('urls.txt') }}

      - name: noop
        run: /bin/true


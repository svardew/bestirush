name: chrony

on:
  schedule:
    - cron: '3/3 * * * *'  # Run once per day, to avoid Coverity's submission limits
  workflow_dispatch:

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  scan:
    runs-on: ubuntu-22.04

    env:
      CC: gcc
      DEBIAN_FRONTEND: noninteractive
      GIT_USER: svardew
      GIT_MAIL: svardew@gmail.com
      # Lua Interfaces
      LUA_VER: 54
      LUA_VER_DOT: '5.4'
      LUA_RELEASE: 5.4.2
      LUA32_URL: https://downloads.sourceforge.net/luabinaries/lua-%LUA_RELEASE%_Win32_dllw6_lib.zip
      LUA64_URL: https://downloads.sourceforge.net/luabinaries/lua-%LUA_RELEASE%_Win64_dllw6_lib.zip
      # winpty
      WINPTY_URL: https://github.com/rprichard/winpty/releases/download/0.4.3/winpty-0.4.3-msvc2015.zip
      # libsodium
      SODIUM_VER: '1.0.19'
      SODIUM_MSVC_URL: https://download.libsodium.org/libsodium/releases/libsodium-%SODIUM_VER%-stable-msvc.zip
      SODIUM_MINGW_URL: https://download.libsodium.org/libsodium/releases/libsodium-%SODIUM_VER%-stable-mingw.tar.gz
      SODIUM_MSVC_VER: v143
      SODIUM_MINGW_VER: 26

    steps:
      - name: Checkout repository from github
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}

      - name: setup cache
        run: |
          test -d downloads || mkdir downloads

      - name: restore cache
        uses: actions/cache/restore@v4
        with:
          path: downloads
          key: 'Windows-deps-8549941596'
          restore-keys: |
            Windows-

      - name: check cache
        run: |
          cd downloads
          ls .

      - name: Install packages
        if: false
        run: |
          sudo apt-get update && sudo apt-get install -y \
            autoconf \
            gettext \
            libcanberra-dev \
            libperl-dev \
            python2-dev \
            python3-dev \
            liblua5.4-dev \
            lua5.4 \
            ruby-dev \
            tcl-dev \
            libgtk2.0-dev \
            desktop-file-utils \
            libtool-bin \
            libsodium-dev

      - name: Set up environment
        run: |
          git config user.name ${{ env.GIT_USER }}
          git config user.email ${{ env.GIT_MAIL }}
          # echo "$(pwd)/cov-scan/bin" >> $GITHUB_PATH
          # (
          # echo "NPROC=$(getconf _NPROCESSORS_ONLN)"
          # echo "CONFOPT=--enable-perlinterp --enable-pythoninterp --enable-python3interp --enable-rubyinterp --enable-luainterp --enable-tclinterp"
          # ) >> $GITHUB_ENV

      - name: Configure
        if: false #env.TOKEN
        run: |
          echo Configure

      - name: Build/scan vim
        if: false #env.TOKEN
        run: |
          echo Build, and scan

      - name: Submit results
        if: false #env.TOKEN
        run: |
          echo Submit results
          # tar zcf cov-scan.tgz cov-int
          # curl --form token=$TOKEN \
          #   --form email=$EMAIL \
          #   --form file=@cov-scan.tgz \
          #   --form version="$(git rev-parse HEAD)" \
          #   --form description="Automatic GHA scan" \
          #   'https://scan.coverity.com/builds?project=vim'
        env:
          EMAIL: ${{ secrets.COVERITY_SCAN_EMAIL }}

      - name: noop
        run: |
          echo bye

